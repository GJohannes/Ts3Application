/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.12.v20180830
 * Generated at: 2018-12-28 22:55:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class peopleOnTs3Server_html extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\r\n");
      out.write("<script src=\"javascript/jquery-3.3.1.js\"></script>\r\n");
      out.write("<script src=\"javascript/loader.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/overallCSS.css\">\r\n");
      out.write("<link rel=\"shortcut icon\" href=\"images/tabIcon.ico\">\r\n");
      out.write("<head>\r\n");
      out.write("<title>People on TS3 Server</title>\r\n");
      out.write("<style>\r\n");
      out.write(".chart {\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\tmin-height: 450px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("\tbackground-color: #000022;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pageDiv {\r\n");
      out.write("\tmargin: auto;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\t/*border: 3px solid #000000;*/\r\n");
      out.write("\tpadding: 10px;\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".headDiv {\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\tfont-size: 2vw;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"divBackgroundGrid\">\r\n");
      out.write("\t\t<div class=\"pageDiv divFont\">\r\n");
      out.write("\t\t\t<div class=\"headDiv\">\r\n");
      out.write("\t\t\t\t<h1>Teamspeak3 Server</h1>\r\n");
      out.write("\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\tPeople Currently Online:\r\n");
      out.write("\t\t\t\t\t<div id=\"peopleOnServerDisplay\">\r\n");
      out.write("\t\t\t\t\t\t<h2>NO PEOPLE ON SERVER</h2>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div id=\"messagesDiv\" class=\"row\">\r\n");
      out.write("\t\t\t\t<div class=\"column80\">\r\n");
      out.write("\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input class=\"inputDate\" type=\"date\" id=\"datepicker\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div style=\"width: 100%; padding-top: 10px; padding-bottom: 10px; color: ffffff;\">(Data is only existing if ServerLogger was active at the given\r\n");
      out.write("\t\t\t\t\t\t\t\t\tday)</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"curve_chart\" align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<img alt=\"Teamspeak Icon\" src=\"images/loading3.gif\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div style=\"width: 100%; color: white; border: 3px solid #ffffff; border-radius: 10px;\">\r\n");
      out.write("\t\t\t\t\t\t<div style=\"width: 90%;\" class=\"divCenter\">\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"buttonGreenStandart\" onclick=\"sendServerMessage()\" style=\"width: 100%;\">Send Message to the TS3Server</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div style=\"width: 100%; font-size: 2vw;\">\r\n");
      out.write("\t\t\t\t\t\t\tMessage to Server:\r\n");
      out.write("\t\t\t\t\t\t\t<textarea id=\"messageToServerString\" style=\"width: 100%; font-size: 2vw; border-radius: 5px; resize: none;\" rows=\"2\">Insert Server Message</textarea>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div style=\"width: 100%; font-size: 2vw; \">\r\n");
      out.write("\t\t\t\t\t\t\tPassword: <input type=\"password\" id=\"passwordForMessageToServerString\" value=\"enter password\" style=\"width: 100%; font-size: 2vw; border-radius: 10px; \">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"column20\">\r\n");
      out.write("\t\t\t\t\t<div id=\"containerWithPersonaleMessageButtons\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"divCenter\" align=\"center\">\r\n");
      out.write("\t\t\t\t<a href=\"Impressum\"> Impressum </a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<br> <br> <br> <br> <br> <br> <br> <br> <br>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("<script src=\"javascript/peopleOnTs3ServerGraph.js\"></script>\r\n");
      out.write("<script src=\"javascript/peopleOnTs3ServerServerMessage.js\"></script>\r\n");
      out.write("<script src=\"javascript/peopleOnTs3ServerUsersOnlinePrivateMessage.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar booleanCheck = false;\r\n");
      out.write("\r\n");
      out.write("\tgoogle.charts.load('current', {\r\n");
      out.write("\t\t'packages' : [ 'corechart' ]\r\n");
      out.write("\t});\r\n");
      out.write("\tgoogle.charts.setOnLoadCallback(drawChart);\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\tdocument.getElementById('datepicker').value = currentDate();\r\n");
      out.write("\t\tconsole.log(\"Document is now ready\");\r\n");
      out.write("\t\tgetUsersOnlineFromServer();\r\n");
      out.write("\t\trefreshUsersOnline();\r\n");
      out.write("\t\trefreshLineChart();\r\n");
      out.write("\t\t$('#datepicker').val(currentDate());\r\n");
      out.write("\t})\r\n");
      out.write("\r\n");
      out.write("\tfunction currentDate() {\r\n");
      out.write("\t\tvar now = new Date();\r\n");
      out.write("\t\tvar day = (\"0\" + now.getDate()).slice(-2);\r\n");
      out.write("\t\tvar month = (\"0\" + (now.getMonth() + 1)).slice(-2);\r\n");
      out.write("\t\tvar today = now.getFullYear() + \"-\" + (month) + \"-\" + (day);\r\n");
      out.write("\t\treturn today;\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
